{
  "address": "0x59c94B0CA423840aA46b45Bd7db904F3E7462973",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "violationIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FinePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "vehicleRegistrationNumber",
          "type": "string"
        }
      ],
      "name": "UserCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "violationType",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "reportedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fineAmount",
          "type": "uint256"
        }
      ],
      "name": "ViolationReported",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_vehicleRegistrationNumber",
          "type": "string"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "finesPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserViolations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "violationType",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "reportedBy",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isPaid",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "fineAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct YourContract.Violation[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_violationIndex",
          "type": "uint256"
        }
      ],
      "name": "payFine",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_violationType",
          "type": "string"
        }
      ],
      "name": "reportViolation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "vehicleRegistrationNumber",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pendingFines",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "vehicleToUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "violationFines",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x543e10f616a9fc93a033d6086200ec01590df43f590a3f8c74ef7af347dfec43",
  "receipt": {
    "to": null,
    "from": "0x5a4983927dCEe4aF40E5829Eb890698e63C9e3ce",
    "contractAddress": "0x59c94B0CA423840aA46b45Bd7db904F3E7462973",
    "transactionIndex": 15,
    "gasUsed": "1014195",
    "logsBloom": "0x
    "blockHash": "0xec2cafe1c2ee622b68c7edb48aa94cfb6b429484cbedf8a8c350e6282fded00a",
    "transactionHash": "0x543e10f616a9fc93a033d6086200ec01590df43f590a3f8c74ef7af347dfec43",
    "logs": [],
    "blockNumber": 18875583,
    "cumulativeGasUsed": "2825193",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "34e49d2250c9e45f399af2109dd374a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"violationIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FinePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"vehicleRegistrationNumber\",\"type\":\"string\"}],\"name\":\"UserCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"violationType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reportedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fineAmount\",\"type\":\"uint256\"}],\"name\":\"ViolationReported\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_vehicleRegistrationNumber\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"finesPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserViolations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"violationType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"reportedBy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPaid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fineAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct YourContract.Violation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_violationIndex\",\"type\":\"uint256\"}],\"name\":\"payFine\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_violationType\",\"type\":\"string\"}],\"name\":\"reportViolation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleRegistrationNumber\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pendingFines\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"vehicleToUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"violationFines\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"YourContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YourContract.sol\":{\"content\":\"pragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\ncontract YourContract {\\r\\n    struct User {\\r\\n        string name;\\r\\n        string vehicleRegistrationNumber;\\r\\n        address walletAddress;\\r\\n        uint256 pendingFines;\\r\\n    }\\r\\n\\r\\n    struct Violation {\\r\\n        uint256 time;\\r\\n        string violationType;\\r\\n        address reportedBy;\\r\\n        bool isPaid;\\r\\n        uint256 fineAmount;\\r\\n    }\\r\\n\\r\\n    mapping(address => User) public users;\\r\\n    mapping(string => address) public vehicleToUser;\\r\\n    mapping(address => Violation[]) userViolations;\\r\\n    mapping(address => uint256) public finesPaid;\\r\\n    mapping(string => uint256) public violationFines;\\r\\n\\r\\n    event UserCreated(address indexed userAddress, string name, string vehicleRegistrationNumber);\\r\\n    event ViolationReported(address indexed user, string violationType, address reportedBy, uint256 fineAmount);\\r\\n    event FinePaid(address indexed user, uint256 violationIndex, uint256 amount);\\r\\n\\r\\n    constructor() {\\r\\n        // Initialize some dummy fine amounts for violation types\\r\\n        violationFines[\\\"Speeding\\\"] = 100;\\r\\n        violationFines[\\\"Parking\\\"] = 50;\\r\\n        violationFines[\\\"Red Light\\\"] = 200;\\r\\n    }\\r\\n\\r\\n    // Create a new user\\r\\n    function createUser(string memory _name, string memory _vehicleRegistrationNumber) public {\\r\\n        require(users[msg.sender].walletAddress == address(0), \\\"User already exists\\\");\\r\\n        users[msg.sender] = User({\\r\\n            name: _name,\\r\\n            vehicleRegistrationNumber: _vehicleRegistrationNumber,\\r\\n            walletAddress: msg.sender,\\r\\n            pendingFines: 0\\r\\n        });\\r\\n        vehicleToUser[_vehicleRegistrationNumber] = msg.sender;\\r\\n        emit UserCreated(msg.sender, _name, _vehicleRegistrationNumber);\\r\\n    }\\r\\n\\r\\n    // Report a violation\\r\\n    function reportViolation(address _user, string memory _violationType) public {\\r\\n        require(users[_user].walletAddress != address(0), \\\"User does not exist\\\");\\r\\n        require(violationFines[_violationType] > 0, \\\"Invalid violation type\\\");\\r\\n\\r\\n        uint256 fineAmount = violationFines[_violationType];\\r\\n        userViolations[_user].push(Violation({\\r\\n            time: block.timestamp,\\r\\n            violationType: _violationType,\\r\\n            reportedBy: msg.sender,\\r\\n            isPaid: false,\\r\\n            fineAmount: fineAmount\\r\\n        }));\\r\\n        users[_user].pendingFines++;\\r\\n        emit ViolationReported(_user, _violationType, msg.sender, fineAmount);\\r\\n    }\\r\\n\\r\\n    // Fetch all violations of a user\\r\\n    function getUserViolations(address _user) public view returns (Violation[] memory) {\\r\\n        return userViolations[_user];\\r\\n    }\\r\\n\\r\\n    // Pay a fine\\r\\n    function payFine(address _user, uint256 _violationIndex) public payable {\\r\\n        require(users[_user].walletAddress != address(0), \\\"User does not exist\\\");\\r\\n        require(_violationIndex < userViolations[_user].length, \\\"Invalid violation index\\\");\\r\\n        require(!userViolations[_user][_violationIndex].isPaid, \\\"Fine already paid\\\");\\r\\n\\r\\n        Violation storage violation = userViolations[_user][_violationIndex];\\r\\n        require(msg.value == violation.fineAmount, \\\"Payment must be equal to the fine amount\\\");\\r\\n\\r\\n        violation.isPaid = true;\\r\\n        users[_user].pendingFines--;\\r\\n        finesPaid[_user] += msg.value;\\r\\n        emit FinePaid(_user, _violationIndex, msg.value);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4d5b46e3576a2efeb2bf74184115eb7461879f1dc0371f74bd172f9c0ab37620\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506064600460405161003090675370656564696e6760c01b815260080190565b90815260405190819003602001812091909155665061726b696e6760c81b8152603290600490600701908152604051908190036020018120919091556814995908131a59da1d60ba1b815260c89060049060090190815260405190819003602001902055611023806100a36000396000f3fe60806040526004361061007b5760003560e01c806387b162b51161004e57806387b162b51461014e57806396ab4bab1461016e578063a87430ba146101a6578063d0b9cf24146101d657600080fd5b80630a25e2f814610080578063334b4863146100c057806356e18f51146100e257806370c51139146100f5575b600080fd5b34801561008c57600080fd5b506100ad61009b366004610ab1565b60036020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156100cc57600080fd5b506100e06100db366004610b76565b610203565b005b6100e06100f0366004610bc4565b61040b565b34801561010157600080fd5b50610136610110366004610bee565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b34801561015a57600080fd5b506100e0610169366004610c2b565b6106a8565b34801561017a57600080fd5b506100ad610189366004610bee565b805160208183018101805160048252928201919093012091525481565b3480156101b257600080fd5b506101c66101c1366004610ab1565b61080c565b6040516100b79493929190610cd5565b3480156101e257600080fd5b506101f66101f1366004610ab1565b61094e565b6040516100b79190610d17565b6001600160a01b03828116600090815260208190526040902060020154166102685760405162461bcd60e51b8152602060048201526013602482015272155cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b600060048260405161027a9190610db7565b908152602001604051809103902054116102cf5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642076696f6c6174696f6e207479706560501b604482015260640161025f565b60006004826040516102e19190610db7565b908152604080519182900360209081018320546001600160a01b03871660009081526002835283812060a086018552428652858401888152339587019590955260608601829052608086018390528054600181810183559183529390912085516004909402019283559251909450909182019061035e9082610e5c565b5060408281015160028301805460608601511515600160a01b026001600160a81b03199091166001600160a01b039384161717905560809093015160039283015591851660009081526020819052918220018054916103bc83610f32565b9190505550826001600160a01b03167faa376010f293fc2cf9fd32a4f6f25fcc273f37844a3b33f76cab5211070da1808333846040516103fe93929190610f4b565b60405180910390a2505050565b6001600160a01b038281166000908152602081905260409020600201541661046b5760405162461bcd60e51b8152602060048201526013602482015272155cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b604482015260640161025f565b6001600160a01b03821660009081526002602052604090205481106104d25760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642076696f6c6174696f6e20696e646578000000000000000000604482015260640161025f565b6001600160a01b03821660009081526002602052604090208054829081106104fc576104fc610f79565b906000526020600020906004020160020160149054906101000a900460ff161561055c5760405162461bcd60e51b8152602060048201526011602482015270119a5b9948185b1c9958591e481c185a59607a1b604482015260640161025f565b6001600160a01b038216600090815260026020526040812080548390811061058657610586610f79565b90600052602060002090600402019050806003015434146105fa5760405162461bcd60e51b815260206004820152602860248201527f5061796d656e74206d75737420626520657175616c20746f207468652066696e6044820152671948185b5bdd5b9d60c21b606482015260840161025f565b60028101805460ff60a01b1916600160a01b1790556001600160a01b038316600090815260208190526040812060030180549161063683610f8f565b90915550506001600160a01b03831660009081526003602052604081208054349290610663908490610fa6565b9091555050604080518381523460208201526001600160a01b038516917f7cf7727a6ea8ffa8b0fa4c048af68e653cbe5008f79a2ab7518ef64d667f909591016103fe565b336000908152602081905260409020600201546001600160a01b0316156107075760405162461bcd60e51b81526020600482015260136024820152725573657220616c72656164792065786973747360681b604482015260640161025f565b604080516080810182528381526020808201849052338284018190526000606084018190529081529081905291909120815181906107459082610e5c565b506020820151600182019061075a9082610e5c565b506040828101516002830180546001600160a01b0319166001600160a01b0390921691909117905560609092015160039091015551339060019061079f908490610db7565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b03199093169290921790915533907fa2e1d286e25c6fce64acccdfd7a54d53cce2f617ddff648ab1dbb3458ccdd95b906108009085908590610fbf565b60405180910390a25050565b60006020819052908152604090208054819061082790610dd3565b80601f016020809104026020016040519081016040528092919081815260200182805461085390610dd3565b80156108a05780601f10610875576101008083540402835291602001916108a0565b820191906000526020600020905b81548152906001019060200180831161088357829003601f168201915b5050505050908060010180546108b590610dd3565b80601f01602080910402602001604051908101604052809291908181526020018280546108e190610dd3565b801561092e5780601f106109035761010080835404028352916020019161092e565b820191906000526020600020905b81548152906001019060200180831161091157829003601f168201915b50505050600283015460039093015491926001600160a01b031691905084565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610a8a57838290600052602060002090600402016040518060a0016040529081600082015481526020016001820180546109c390610dd3565b80601f01602080910402602001604051908101604052809291908181526020018280546109ef90610dd3565b8015610a3c5780601f10610a1157610100808354040283529160200191610a3c565b820191906000526020600020905b815481529060010190602001808311610a1f57829003601f168201915b505050918352505060028201546001600160a01b038116602080840191909152600160a01b90910460ff16151560408301526003909201546060909101529082526001929092019101610986565b505050509050919050565b80356001600160a01b0381168114610aac57600080fd5b919050565b600060208284031215610ac357600080fd5b610acc82610a95565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610afa57600080fd5b813567ffffffffffffffff80821115610b1557610b15610ad3565b604051601f8301601f19908116603f01168101908282118183101715610b3d57610b3d610ad3565b81604052838152866020858801011115610b5657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610b8957600080fd5b610b9283610a95565b9150602083013567ffffffffffffffff811115610bae57600080fd5b610bba85828601610ae9565b9150509250929050565b60008060408385031215610bd757600080fd5b610be083610a95565b946020939093013593505050565b600060208284031215610c0057600080fd5b813567ffffffffffffffff811115610c1757600080fd5b610c2384828501610ae9565b949350505050565b60008060408385031215610c3e57600080fd5b823567ffffffffffffffff80821115610c5657600080fd5b610c6286838701610ae9565b93506020850135915080821115610c7857600080fd5b50610bba85828601610ae9565b60005b83811015610ca0578181015183820152602001610c88565b50506000910152565b60008151808452610cc1816020860160208601610c85565b601f01601f19169290920160200192915050565b608081526000610ce86080830187610ca9565b8281036020840152610cfa8187610ca9565b6001600160a01b0395909516604084015250506060015292915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610da957603f19898403018552815160a08151855288820151818a870152610d6c82870182610ca9565b838a01516001600160a01b0316878b0152606080850151151590880152608093840151939096019290925250509386019390860190600101610d3e565b509098975050505050505050565b60008251610dc9818460208701610c85565b9190910192915050565b600181811c90821680610de757607f821691505b602082108103610e0757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610e5757600081815260208120601f850160051c81016020861015610e345750805b601f850160051c820191505b81811015610e5357828155600101610e40565b5050505b505050565b815167ffffffffffffffff811115610e7657610e76610ad3565b610e8a81610e848454610dd3565b84610e0d565b602080601f831160018114610ebf5760008415610ea75750858301515b600019600386901b1c1916600185901b178555610e53565b600085815260208120601f198616915b82811015610eee57888601518255948401946001909101908401610ecf565b5085821015610f0c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201610f4457610f44610f1c565b5060010190565b606081526000610f5e6060830186610ca9565b6001600160a01b039490941660208301525060400152919050565b634e487b7160e01b600052603260045260246000fd5b600081610f9e57610f9e610f1c565b506000190190565b80820180821115610fb957610fb9610f1c565b92915050565b604081526000610fd26040830185610ca9565b8281036020840152610fe48185610ca9565b9594505050505056fea264697066735822122022c121f6520e19552bfa34a4283bad603556940ebf33e1f8bcdc07274ef4878764736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "users",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(User)10_storage)"
      },
      {
        "astId": 30,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "vehicleToUser",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 36,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "userViolations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(Violation)21_storage)dyn_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "finesPaid",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 44,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "violationFines",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Violation)21_storage)dyn_storage": {
        "base": "t_struct(Violation)21_storage",
        "encoding": "dynamic_array",
        "label": "struct YourContract.Violation[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(Violation)21_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct YourContract.Violation[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Violation)21_storage)dyn_storage"
      },
      "t_mapping(t_address,t_struct(User)10_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct YourContract.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)10_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(User)10_storage": {
        "encoding": "inplace",
        "label": "struct YourContract.User",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "vehicleRegistrationNumber",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "walletAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 9,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "pendingFines",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Violation)21_storage": {
        "encoding": "inplace",
        "label": "struct YourContract.Violation",
        "members": [
          {
            "astId": 12,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "time",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 14,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "violationType",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 16,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "reportedBy",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 18,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "isPaid",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 20,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "fineAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}