{
  "address": "0x0597830Bf4809DDa7A8bA6A89e31EcbFB5eb181c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_votingQuestion",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "proposalDescriptions",
          "type": "string[]"
        },
        {
          "internalType": "address",
          "name": "_verifierAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_propositionIndex",
          "type": "uint256"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "anonAadhaarVerifierAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nullifier",
          "type": "uint256"
        }
      ],
      "name": "checkVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isLessThan3HoursAgo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nullifierSeed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nullifier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256[4]",
          "name": "revealArray",
          "type": "uint256[4]"
        },
        {
          "internalType": "uint256[8]",
          "name": "groth16Proof",
          "type": "uint256[8]"
        }
      ],
      "name": "voteForProposal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingQuestion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x44f6e8680e22a71c254da8f98626a350423d8963937c1a85d01aebe5163034f1",
  "receipt": {
    "to": null,
    "from": "0x5a4983927dCEe4aF40E5829Eb890698e63C9e3ce",
    "contractAddress": "0x0597830Bf4809DDa7A8bA6A89e31EcbFB5eb181c",
    "transactionIndex": 8,
    "gasUsed": "787496",
    "logsBloom": "0x
    "blockHash": "0x0900610c371f56ba1e15ea833fe9e8d6d5c8829e88c9dbaaee4bcbc7bd855555",
    "transactionHash": "0x44f6e8680e22a71c254da8f98626a350423d8963937c1a85d01aebe5163034f1",
    "logs": [],
    "blockNumber": 18899018,
    "cumulativeGasUsed": "2009765",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Voting Question",
    [
      "Proposal 1",
      "Proposal 2"
    ],
    "0xC4C4d6c21F1D8e4591a69f7662b6EcE0f2f0E61b"
  ],
  "numDeployments": 12,
  "solcInputHash": "c98ef065f0ec7982cb3c64bba07acd66",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_votingQuestion\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"proposalDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"_verifierAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_propositionIndex\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"anonAadhaarVerifierAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nullifier\",\"type\":\"uint256\"}],\"name\":\"checkVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isLessThan3HoursAgo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierSeed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"revealArray\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[8]\",\"name\":\"groth16Proof\",\"type\":\"uint256[8]\"}],\"name\":\"voteForProposal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingQuestion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isLessThan3HoursAgo(uint256)\":{\"details\":\"Check if the timestamp is more recent than (current time - 3 hours)\",\"params\":{\"timestamp\":\": msg.sender address.\"},\"returns\":{\"_0\":\"bool\"}},\"voteForProposal(uint256,uint256,uint256,uint256,uint256[4],uint256[8])\":{\"details\":\"Register a vote in the contract.\",\"params\":{\"groth16Proof\":\": SNARK Groth16 proof.\",\"nullifier\":\": Nullifier for the user's Aadhaar data.\",\"nullifierSeed\":\": Nullifier Seed used while generating the proof.\",\"proposalIndex\":\": Index of the proposal you want to vote for.\",\"revealArray\":\": Array of the values used as input for the proof generation (equal to [0, 0, 0, 0] if no field reveal were asked).\",\"timestamp\":\": Timestamp of when the QR code was signed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"AnonAadhaarVote\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@anon-aadhaar/contracts/interfaces/IAnonAadhaar.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.19;\\n\\ninterface IAnonAadhaar {\\n    function verifyAnonAadhaarProof(\\n        uint nullifierSeed,\\n        uint nullifier,\\n        uint timestamp,\\n        uint signal,\\n        uint[4] memory revealArray,\\n        uint[8] memory groth16Proof\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x3d0247e04707d2266471efeef4ab38ecf879cc286217ad5f624d966608e8964d\",\"license\":\"GPL-3.0\"},\"@anon-aadhaar/contracts/interfaces/IAnonAadhaarVote.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.19;\\n\\ninterface IAnonAadhaarVote {\\n\\n    struct Proposal {\\n        string description;\\n        uint256 voteCount;\\n    }\\n\\n    event Voted(address indexed _from, uint256 indexed _propositionIndex);\\n}\",\"keccak256\":\"0xd67f99d608c3765f289f7561231f806ab439964dca134728973be60dee700eb0\",\"license\":\"GPL-3.0\"},\"contracts/YourContract.sol\":{\"content\":\"pragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\ncontract YourContract {\\r\\n    struct User {\\r\\n        string name;\\r\\n        string vehicleRegistrationNumber;\\r\\n        address walletAddress;\\r\\n        uint256 pendingFines;\\r\\n    }\\r\\n\\r\\n    struct Violation {\\r\\n        uint256 time;\\r\\n        string violationType;\\r\\n        address reportedBy;\\r\\n        bool isPaid;\\r\\n        uint256 fineAmount;\\r\\n    }\\r\\n\\r\\n    mapping(address => User) public users;\\r\\n    mapping(string => address) public vehicleToUser;\\r\\n    mapping(address => Violation[]) userViolations;\\r\\n    mapping(address => uint256) public finesPaid;\\r\\n    mapping(string => uint256) public violationFines;\\r\\n\\r\\n    event UserCreated(address indexed userAddress, string name, string vehicleRegistrationNumber);\\r\\n    event ViolationReported(address indexed user, string violationType, address reportedBy, uint256 fineAmount);\\r\\n    event FinePaid(address indexed user, uint256 violationIndex, uint256 amount);\\r\\n\\r\\n    constructor() {\\r\\n        // Initialize some dummy fine amounts for violation types\\r\\n        violationFines[\\\"Speeding\\\"] = 100;\\r\\n        violationFines[\\\"Parking\\\"] = 50;\\r\\n        violationFines[\\\"Red Light\\\"] = 200;\\r\\n    }\\r\\n\\r\\n    // Create a new user\\r\\n    function createUser(string memory _name, string memory _vehicleRegistrationNumber) public {\\r\\n        require(users[msg.sender].walletAddress == address(0), \\\"User already exists\\\");\\r\\n        users[msg.sender] = User({\\r\\n            name: _name,\\r\\n            vehicleRegistrationNumber: _vehicleRegistrationNumber,\\r\\n            walletAddress: msg.sender,\\r\\n            pendingFines: 0\\r\\n        });\\r\\n        vehicleToUser[_vehicleRegistrationNumber] = msg.sender;\\r\\n        emit UserCreated(msg.sender, _name, _vehicleRegistrationNumber);\\r\\n    }\\r\\n\\r\\n    // Report a violation\\r\\n    function reportViolation(address _user, string memory _violationType) public {\\r\\n        require(users[_user].walletAddress != address(0), \\\"User does not exist\\\");\\r\\n        require(violationFines[_violationType] > 0, \\\"Invalid violation type\\\");\\r\\n\\r\\n        uint256 fineAmount = violationFines[_violationType];\\r\\n        userViolations[_user].push(Violation({\\r\\n            time: block.timestamp,\\r\\n            violationType: _violationType,\\r\\n            reportedBy: msg.sender,\\r\\n            isPaid: false,\\r\\n            fineAmount: fineAmount\\r\\n        }));\\r\\n        users[_user].pendingFines++;\\r\\n        emit ViolationReported(_user, _violationType, msg.sender, fineAmount);\\r\\n    }\\r\\n\\r\\n    // Fetch all violations of a user\\r\\n    function getUserViolations(address _user) public view returns (Violation[] memory) {\\r\\n        return userViolations[_user];\\r\\n    }\\r\\n\\r\\n    // Pay a fine\\r\\n    function payFine(address _user, uint256 _violationIndex) public payable {\\r\\n        require(users[_user].walletAddress != address(0), \\\"User does not exist\\\");\\r\\n        require(_violationIndex < userViolations[_user].length, \\\"Invalid violation index\\\");\\r\\n        require(!userViolations[_user][_violationIndex].isPaid, \\\"Fine already paid\\\");\\r\\n\\r\\n        Violation storage violation = userViolations[_user][_violationIndex];\\r\\n        require(msg.value == violation.fineAmount, \\\"Payment must be equal to the fine amount\\\");\\r\\n\\r\\n        violation.isPaid = true;\\r\\n        users[_user].pendingFines--;\\r\\n        finesPaid[_user] += msg.value;\\r\\n        emit FinePaid(_user, _violationIndex, msg.value);\\r\\n    }\\r\\n}\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\nimport '@anon-aadhaar/contracts/interfaces/IAnonAadhaar.sol';\\r\\nimport '@anon-aadhaar/contracts/interfaces/IAnonAadhaarVote.sol';\\r\\n\\r\\ncontract AnonAadhaarVote is IAnonAadhaarVote {\\r\\n    string public votingQuestion;\\r\\n    address public anonAadhaarVerifierAddr;\\r\\n\\r\\n    // List of proposals\\r\\n    Proposal[] public proposals;\\r\\n\\r\\n    // Mapping to track if a userNullifier has already voted\\r\\n    mapping(uint256 => bool) public hasVoted;\\r\\n\\r\\n    // Constructor to initialize proposals\\r\\n    constructor(\\r\\n        string memory _votingQuestion,\\r\\n        string[] memory proposalDescriptions,\\r\\n        address _verifierAddr\\r\\n    ) {\\r\\n        anonAadhaarVerifierAddr = _verifierAddr;\\r\\n        votingQuestion = _votingQuestion;\\r\\n        for (uint256 i = 0; i < proposalDescriptions.length; i++) {\\r\\n            proposals.push(Proposal(proposalDescriptions[i], 0));\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /// @dev Convert an address to uint256, used to check against signal.\\r\\n    /// @param _addr: msg.sender address.\\r\\n    /// @return Address msg.sender's address in uint256\\r\\n    function addressToUint256(address _addr) private pure returns (uint256) {\\r\\n        return uint256(uint160(_addr));\\r\\n    }\\r\\n\\r\\n    /// @dev Check if the timestamp is more recent than (current time - 3 hours)\\r\\n    /// @param timestamp: msg.sender address.\\r\\n    /// @return bool\\r\\n    function isLessThan3HoursAgo(uint timestamp) public view returns (bool) {\\r\\n        return timestamp > (block.timestamp - 3 * 60 * 60);\\r\\n    }\\r\\n\\r\\n    /// @dev Register a vote in the contract.\\r\\n    /// @param proposalIndex: Index of the proposal you want to vote for.\\r\\n    /// @param nullifierSeed: Nullifier Seed used while generating the proof.\\r\\n    /// @param nullifier: Nullifier for the user's Aadhaar data.\\r\\n    /// @param timestamp: Timestamp of when the QR code was signed.\\r\\n    /// @param revealArray: Array of the values used as input for the proof generation (equal to [0, 0, 0, 0] if no field reveal were asked).\\r\\n    /// @param groth16Proof: SNARK Groth16 proof.\\r\\n    function voteForProposal(\\r\\n    uint256 proposalIndex,\\r\\n    uint256 nullifierSeed,\\r\\n    uint256 nullifier,\\r\\n    uint256 timestamp,\\r\\n    uint256[4] memory revealArray, \\r\\n    uint256[8] memory groth16Proof\\r\\n) public payable {\\r\\n    require(!hasVoted[nullifier], '[AnonAadhaarVote]: User has already voted');\\r\\n    require(proposalIndex < proposals.length, '[AnonAadhaarVote]: Invalid proposal index');\\r\\n    \\r\\n    bool isValid = IAnonAadhaar(anonAadhaarVerifierAddr).verifyAnonAadhaarProof(\\r\\n        nullifierSeed,\\r\\n        nullifier,\\r\\n        timestamp,\\r\\n        addressToUint256(msg.sender),\\r\\n        revealArray,\\r\\n        groth16Proof\\r\\n    );\\r\\n    require(isValid, '[AnonAadhaarVote]: proof sent is not valid.');\\r\\n\\r\\n    hasVoted[nullifier] = true;\\r\\n    proposals[proposalIndex].voteCount++;\\r\\n\\r\\n    emit Voted(msg.sender, proposalIndex);\\r\\n}\\r\\n\\r\\n\\r\\n    // Function to get the total number of proposals\\r\\n    function getProposalCount() public view returns (uint256) {\\r\\n        return proposals.length;\\r\\n    }\\r\\n\\r\\n    // Function to get proposal information by index\\r\\n    function getProposal(\\r\\n        uint256 proposalIndex\\r\\n    ) public view returns (string memory, uint256) {\\r\\n        require(\\r\\n            proposalIndex < proposals.length,\\r\\n            '[AnonAadhaarVote]: Invalid proposal index here'\\r\\n        );\\r\\n\\r\\n        Proposal memory proposal = proposals[proposalIndex];\\r\\n        return (proposal.description, proposal.voteCount);\\r\\n    }\\r\\n\\r\\n    // Function to get the total number of votes across all proposals\\r\\n    function getTotalVotes() public view returns (uint256) {\\r\\n        uint256 totalVotes = 0;\\r\\n        for (uint256 i = 0; i < proposals.length; i++) {\\r\\n            totalVotes += proposals[i].voteCount;\\r\\n        }\\r\\n        return totalVotes;\\r\\n    }\\r\\n\\r\\n    // Function to check if a user has already voted\\r\\n    function checkVoted(uint256 _nullifier) public view returns (bool) {\\r\\n        return hasVoted[_nullifier];\\r\\n    }\\r\\n}\",\"keccak256\":\"0x67bfa510019398639467256cade452bb01530ef22811543af7c6fba5bd53001f\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000f5f38038062000f5f8339810160408190526200003491620001e7565b600180546001600160a01b0319166001600160a01b03831617905560006200005d84826200037f565b5060005b8251811015620000ea57600260405180604001604052808584815181106200008d576200008d6200044b565b60209081029190910181015182526000918101829052835460018101855593825290208151919260020201908190620000c790826200037f565b506020820151816001015550508080620000e19062000461565b91505062000061565b5050505062000489565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001355762000135620000f4565b604052919050565b600082601f8301126200014f57600080fd5b81516001600160401b038111156200016b576200016b620000f4565b602062000181601f8301601f191682016200010a565b82815285828487010111156200019657600080fd5b60005b83811015620001b657858101830151828201840152820162000199565b506000928101909101919091529392505050565b80516001600160a01b0381168114620001e257600080fd5b919050565b600080600060608486031215620001fd57600080fd5b83516001600160401b03808211156200021557600080fd5b62000223878388016200013d565b94506020915081860151818111156200023b57600080fd5b8601601f810188136200024d57600080fd5b805182811115620002625762000262620000f4565b8060051b620002738582016200010a565b918252828101850191858101908b8411156200028e57600080fd5b86850192505b83831015620002cf57825186811115620002ae5760008081fd5b620002be8d89838901016200013d565b835250918601919086019062000294565b80985050505050505050620002e760408501620001ca565b90509250925092565b600181811c908216806200030557607f821691505b6020821081036200032657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200037a57600081815260208120601f850160051c81016020861015620003555750805b601f850160051c820191505b81811015620003765782815560010162000361565b5050505b505050565b81516001600160401b038111156200039b576200039b620000f4565b620003b381620003ac8454620002f0565b846200032c565b602080601f831160018114620003eb5760008415620003d25750858301515b600019600386901b1c1916600185901b17855562000376565b600085815260208120601f198616915b828110156200041c57888601518255948401946001909101908401620003fb565b50858210156200043b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016200048257634e487b7160e01b600052601160045260246000fd5b5060010190565b610ac680620004996000396000f3fe6080604052600436106100915760003560e01c80637f7658ff116100595780637f7658ff1461017a5780639a0e7d661461019c578063c08cc02d146101bf578063c7f758a8146101d4578063ecca031f146101f457600080fd5b8063013cf08b146100965780630dbffbcd146100cd5780630f105cef146101055780631ec7ea8f1461011a578063470d8c2c1461014a575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610765565b610224565b6040516100c49291906107c4565b60405180910390f35b3480156100d957600080fd5b506001546100ed906001600160a01b031681565b6040516001600160a01b0390911681526020016100c4565b61011861011336600461088b565b6102e0565b005b34801561012657600080fd5b5061013a610135366004610765565b61051e565b60405190151581526020016100c4565b34801561015657600080fd5b5061013a610165366004610765565b60009081526003602052604090205460ff1690565b34801561018657600080fd5b5061018f610534565b6040516100c49190610933565b3480156101a857600080fd5b506101b16105c2565b6040519081526020016100c4565b3480156101cb57600080fd5b506002546101b1565b3480156101e057600080fd5b506100b66101ef366004610765565b61061b565b34801561020057600080fd5b5061013a61020f366004610765565b60036020526000908152604090205460ff1681565b6002818154811061023457600080fd5b90600052602060002090600202016000915090508060000180546102579061094d565b80601f01602080910402602001604051908101604052809291908181526020018280546102839061094d565b80156102d05780601f106102a5576101008083540402835291602001916102d0565b820191906000526020600020905b8154815290600101906020018083116102b357829003601f168201915b5050505050908060010154905082565b60008481526003602052604090205460ff16156103565760405162461bcd60e51b815260206004820152602960248201527f5b416e6f6e41616468616172566f74655d3a20557365722068617320616c726560448201526818591e481d9bdd195960ba1b60648201526084015b60405180910390fd5b60025486106103b95760405162461bcd60e51b815260206004820152602960248201527f5b416e6f6e41616468616172566f74655d3a20496e76616c69642070726f706f6044820152680e6c2d840d2dcc8caf60bb1b606482015260840161034d565b6001546040516350de0e5760e01b81526000916001600160a01b0316906350de0e57906103f49089908990899033908a908a90600401610981565b602060405180830381865afa158015610411573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043591906109fd565b9050806104985760405162461bcd60e51b815260206004820152602b60248201527f5b416e6f6e41616468616172566f74655d3a2070726f6f662073656e7420697360448201526a103737ba103b30b634b21760a91b606482015260840161034d565b6000858152600360205260409020805460ff1916600117905560028054889081106104c5576104c5610a1f565b6000918252602082206001600290920201018054916104e383610a4b565b9091555050604051879033907f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca490600090a350505050505050565b600061052c612a3042610a64565b909111919050565b600080546105419061094d565b80601f016020809104026020016040519081016040528092919081815260200182805461056d9061094d565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b505050505081565b600080805b60025481101561061557600281815481106105e4576105e4610a1f565b906000526020600020906002020160010154826106019190610a7d565b91508061060d81610a4b565b9150506105c7565b50919050565b60025460609060009083106106895760405162461bcd60e51b815260206004820152602e60248201527f5b416e6f6e41616468616172566f74655d3a20496e76616c69642070726f706f60448201526d73616c20696e646578206865726560901b606482015260840161034d565b60006002848154811061069e5761069e610a1f565b90600052602060002090600202016040518060400160405290816000820180546106c79061094d565b80601f01602080910402602001604051908101604052809291908181526020018280546106f39061094d565b80156107405780601f1061071557610100808354040283529160200191610740565b820191906000526020600020905b81548152906001019060200180831161072357829003601f168201915b5050509183525050600191909101546020918201528151910151909590945092505050565b60006020828403121561077757600080fd5b5035919050565b6000815180845260005b818110156107a457602081850181015186830182015201610788565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006107d7604083018561077e565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610820576108206107e6565b60405290565b6040516080810167ffffffffffffffff81118282101715610820576108206107e6565b60006108536107fc565b90508061010083018481111561086857600080fd5b835b8181101561088257803583526020928301920161086a565b50505092915050565b60008060008060008061020087890312156108a557600080fd5b863595506020808801359550604088013594506060880135935088609f8901126108ce57600080fd5b6108d6610826565b806101008a018b8111156108e957600080fd5b60808b015b8181101561090557803584529284019284016108ee565b508195508b61011f8c011261091957600080fd5b6109238c82610849565b9450505050509295509295509295565b602081526000610946602083018461077e565b9392505050565b600181811c9082168061096157607f821691505b60208210810361061557634e487b7160e01b600052602260045260246000fd5b60006102008201905087825260208781840152866040840152856060840152608083018560005b60048110156109c5578151835291830191908301906001016109a8565b50505061010083018460005b60088110156109ee578151835291830191908301906001016109d1565b50505050979650505050505050565b600060208284031215610a0f57600080fd5b8151801515811461094657600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610a5d57610a5d610a35565b5060010190565b81810381811115610a7757610a77610a35565b92915050565b80820180821115610a7757610a77610a3556fea2646970667358221220577703d2e02366aa116e115c64c11e4f95fd609458487a66e4803aa86e5fdbd864736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80637f7658ff116100595780637f7658ff1461017a5780639a0e7d661461019c578063c08cc02d146101bf578063c7f758a8146101d4578063ecca031f146101f457600080fd5b8063013cf08b146100965780630dbffbcd146100cd5780630f105cef146101055780631ec7ea8f1461011a578063470d8c2c1461014a575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610765565b610224565b6040516100c49291906107c4565b60405180910390f35b3480156100d957600080fd5b506001546100ed906001600160a01b031681565b6040516001600160a01b0390911681526020016100c4565b61011861011336600461088b565b6102e0565b005b34801561012657600080fd5b5061013a610135366004610765565b61051e565b60405190151581526020016100c4565b34801561015657600080fd5b5061013a610165366004610765565b60009081526003602052604090205460ff1690565b34801561018657600080fd5b5061018f610534565b6040516100c49190610933565b3480156101a857600080fd5b506101b16105c2565b6040519081526020016100c4565b3480156101cb57600080fd5b506002546101b1565b3480156101e057600080fd5b506100b66101ef366004610765565b61061b565b34801561020057600080fd5b5061013a61020f366004610765565b60036020526000908152604090205460ff1681565b6002818154811061023457600080fd5b90600052602060002090600202016000915090508060000180546102579061094d565b80601f01602080910402602001604051908101604052809291908181526020018280546102839061094d565b80156102d05780601f106102a5576101008083540402835291602001916102d0565b820191906000526020600020905b8154815290600101906020018083116102b357829003601f168201915b5050505050908060010154905082565b60008481526003602052604090205460ff16156103565760405162461bcd60e51b815260206004820152602960248201527f5b416e6f6e41616468616172566f74655d3a20557365722068617320616c726560448201526818591e481d9bdd195960ba1b60648201526084015b60405180910390fd5b60025486106103b95760405162461bcd60e51b815260206004820152602960248201527f5b416e6f6e41616468616172566f74655d3a20496e76616c69642070726f706f6044820152680e6c2d840d2dcc8caf60bb1b606482015260840161034d565b6001546040516350de0e5760e01b81526000916001600160a01b0316906350de0e57906103f49089908990899033908a908a90600401610981565b602060405180830381865afa158015610411573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043591906109fd565b9050806104985760405162461bcd60e51b815260206004820152602b60248201527f5b416e6f6e41616468616172566f74655d3a2070726f6f662073656e7420697360448201526a103737ba103b30b634b21760a91b606482015260840161034d565b6000858152600360205260409020805460ff1916600117905560028054889081106104c5576104c5610a1f565b6000918252602082206001600290920201018054916104e383610a4b565b9091555050604051879033907f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca490600090a350505050505050565b600061052c612a3042610a64565b909111919050565b600080546105419061094d565b80601f016020809104026020016040519081016040528092919081815260200182805461056d9061094d565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b505050505081565b600080805b60025481101561061557600281815481106105e4576105e4610a1f565b906000526020600020906002020160010154826106019190610a7d565b91508061060d81610a4b565b9150506105c7565b50919050565b60025460609060009083106106895760405162461bcd60e51b815260206004820152602e60248201527f5b416e6f6e41616468616172566f74655d3a20496e76616c69642070726f706f60448201526d73616c20696e646578206865726560901b606482015260840161034d565b60006002848154811061069e5761069e610a1f565b90600052602060002090600202016040518060400160405290816000820180546106c79061094d565b80601f01602080910402602001604051908101604052809291908181526020018280546106f39061094d565b80156107405780601f1061071557610100808354040283529160200191610740565b820191906000526020600020905b81548152906001019060200180831161072357829003601f168201915b5050509183525050600191909101546020918201528151910151909590945092505050565b60006020828403121561077757600080fd5b5035919050565b6000815180845260005b818110156107a457602081850181015186830182015201610788565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006107d7604083018561077e565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610820576108206107e6565b60405290565b6040516080810167ffffffffffffffff81118282101715610820576108206107e6565b60006108536107fc565b90508061010083018481111561086857600080fd5b835b8181101561088257803583526020928301920161086a565b50505092915050565b60008060008060008061020087890312156108a557600080fd5b863595506020808801359550604088013594506060880135935088609f8901126108ce57600080fd5b6108d6610826565b806101008a018b8111156108e957600080fd5b60808b015b8181101561090557803584529284019284016108ee565b508195508b61011f8c011261091957600080fd5b6109238c82610849565b9450505050509295509295509295565b602081526000610946602083018461077e565b9392505050565b600181811c9082168061096157607f821691505b60208210810361061557634e487b7160e01b600052602260045260246000fd5b60006102008201905087825260208781840152866040840152856060840152608083018560005b60048110156109c5578151835291830191908301906001016109a8565b50505061010083018460005b60088110156109ee578151835291830191908301906001016109d1565b50505050979650505050505050565b600060208284031215610a0f57600080fd5b8151801515811461094657600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610a5d57610a5d610a35565b5060010190565b81810381811115610a7757610a77610a35565b92915050565b80820180821115610a7757610a77610a3556fea2646970667358221220577703d2e02366aa116e115c64c11e4f95fd609458487a66e4803aa86e5fdbd864736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isLessThan3HoursAgo(uint256)": {
        "details": "Check if the timestamp is more recent than (current time - 3 hours)",
        "params": {
          "timestamp": ": msg.sender address."
        },
        "returns": {
          "_0": "bool"
        }
      },
      "voteForProposal(uint256,uint256,uint256,uint256,uint256[4],uint256[8])": {
        "details": "Register a vote in the contract.",
        "params": {
          "groth16Proof": ": SNARK Groth16 proof.",
          "nullifier": ": Nullifier for the user's Aadhaar data.",
          "nullifierSeed": ": Nullifier Seed used while generating the proof.",
          "proposalIndex": ": Index of the proposal you want to vote for.",
          "revealArray": ": Array of the values used as input for the proof generation (equal to [0, 0, 0, 0] if no field reveal were asked).",
          "timestamp": ": Timestamp of when the QR code was signed."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 352,
        "contract": "contracts/YourContract.sol:AnonAadhaarVote",
        "label": "votingQuestion",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 354,
        "contract": "contracts/YourContract.sol:AnonAadhaarVote",
        "label": "anonAadhaarVerifierAddr",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 358,
        "contract": "contracts/YourContract.sol:AnonAadhaarVote",
        "label": "proposals",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Proposal)30_storage)dyn_storage"
      },
      {
        "astId": 362,
        "contract": "contracts/YourContract.sol:AnonAadhaarVote",
        "label": "hasVoted",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Proposal)30_storage)dyn_storage": {
        "base": "t_struct(Proposal)30_storage",
        "encoding": "dynamic_array",
        "label": "struct IAnonAadhaarVote.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)30_storage": {
        "encoding": "inplace",
        "label": "struct IAnonAadhaarVote.Proposal",
        "members": [
          {
            "astId": 27,
            "contract": "contracts/YourContract.sol:AnonAadhaarVote",
            "label": "description",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 29,
            "contract": "contracts/YourContract.sol:AnonAadhaarVote",
            "label": "voteCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}